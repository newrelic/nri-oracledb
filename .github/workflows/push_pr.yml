name: Push/PR pipeline

on:
  push:
    branches:
      - main
      - master
  pull_request:

env:
  TAG: "v0.0.0"
  REPO_FULL_NAME: ${{ github.event.repository.full_name }}
  ORIGINAL_REPO_NAME: "newrelic/nri-oracledb"
  GO_VERSION: '1.16'
  DOCKER_LOGIN_AVAILABLE: ${{ secrets.OHAI_DOCKER_HUB_ID }}

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          only-new-issues: true

  snyk:
    name: Run security checks via snyk
    runs-on: ubuntu-20.04
    env:
      SNYK_TOKEN: ${{ secrets.COREINT_SNYK_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Login to DockerHub
        if: ${{env.DOCKER_LOGIN_AVAILABLE}}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.OHAI_DOCKER_HUB_ID }}
          password: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
      - name: Scan code for vulnerabilities
        if: ${{env.SNYK_TOKEN}}
        run: make ci/snyk-test

  test-nix:
    name: Run unit tests on *Nix
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Login to DockerHub
        if: ${{env.DOCKER_LOGIN_AVAILABLE}}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.OHAI_DOCKER_HUB_ID }}
          password: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
      - name: Unit tests
        run: make ci/test

  test-build:
    name: Test binary compilation for all platforms:arch
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Login to DockerHub
        if: ${{env.DOCKER_LOGIN_AVAILABLE}}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.OHAI_DOCKER_HUB_ID }}
          password: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
      - name: Build all platforms:arch
        run: make ci/build
